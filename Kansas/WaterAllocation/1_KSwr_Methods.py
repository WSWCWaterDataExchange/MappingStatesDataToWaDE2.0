#Date Created: 05/10/2022
#Purpose: To extract KS methods use information and populate dataframe for WaDE_QA 2.0.
#Notes: 1) Two different data sets, groundwater vs surface water.


# Needed Libraries
############################################################################
import os
import numpy as np
import pandas as pd


# Inputs
############################################################################
print("Reading inputs...")
workingDir = "G:/Shared drives/WaDE Data/Kansas/WaterAllocation"
os.chdir(workingDir)

#WaDE columns
columnslist = [
    "MethodUUID",
    "ApplicableResourceTypeCV",
    "DataConfidenceValue",
    "DataCoverageValue",
    "DataQualityValueCV",
    "MethodDescription",
    "MethodName",
    "MethodNEMILink",
    "MethodTypeCV"]


# Creating output dataframe (outdf)
############################################################################
print("Populating dataframe...")
inpVals = [
    "KSwr_M1",
    "Surface Ground Water",
    "",
    "",
    "",
    """The Kansas Department of Agriculture, Division of Water Resources (DWR) and Kansas Geological Survey (KGS) exercises great care in the creation of its Water Information Management and Analysis System (WIMAS) program. However, the DWR or KGS offers no warranty or guarantee of the accuracy or completeness of the WIMAS program and the data contained therein, the DWR or KGS assumes no liability for errors in, interpretation of, or use of these data. Water rights are dynamic and often complex entities. The water rights data used in WIMAS represents the water rights files as of 01/22/2023 and should not be viewed as current. A new water rights data set for the WIMAS program is generated weekly. Information provided in WIMAS can not be used to determine whether a water right has been lawfully used in accordance with the terms, conditions and limitations specified in the vested right, certificate or permit. To obtain current standing information on a particular water right file, please contact the DWR. The term "status", as used in the WIMAS program, denotes one of the following phases of a water right's development: (1) The application is pending initial review by the DWR; (2) A permit has been issued; (3) The DWR has received a notice and proof of completion of the diversion works; (4) The time to perfect the water right has expired; (5) A Certificate of Appropriation has been issued; or (6) The water right has been dismissed for some reason.
    Information contained in the WIMAS program is a public record; however, by accessing the WIMAS program, associated data, and any products generated by WIMAS (i.e. maps, graphs, tables, and reports) the user agrees that they will not use them for selling, or offering the sale, of any property or services in violation of K.S.A 45-220(c)(2).
    For more information contact the DWR via the Internet or at (785) 564-6640."""
    ,
    "Kansas Water Right Method",
    "https://agriculture.ks.gov/divisions-programs/dwr/water-appropriation/water-law-basics",
    "Legal Processes"]

outdf = pd.DataFrame([inpVals], columns=columnslist)


# Check required fields are not null
############################################################################
print("Check required is not null...")
#Check all 'required' (not NA) columns have value (not empty). Replace blank strings by NaN, if there are any
outdf = outdf.replace('', np.nan)
outdf_nullMand = outdf.loc[(outdf["MethodUUID"].isnull()) | (outdf["MethodUUID"] == '') |
                           (outdf["MethodName"].isnull()) | (outdf["MethodName"] == '') |
                           (outdf["MethodDescription"].isnull()) | (outdf["MethodDescription"] == '') |
                           (outdf["ApplicableResourceTypeCV"].isnull()) | (outdf["ApplicableResourceTypeCV"] == '') |
                           (outdf["MethodTypeCV"].isnull()) | (outdf["MethodTypeCV"] == '')]


# Export to new csv
############################################################################
print("Exporting dataframe to csv...")

# The working output DataFrame for WaDE 2.0 input.
outdf.to_csv('ProcessedInputData/methods.csv', index=False)

# Report purged values.
if(len(outdf_nullMand.index) > 0):
    outdf_nullMand.to_csv('ProcessedInputData/methods_mandatoryFieldMissing.csv', index=False)

print("Done.")
